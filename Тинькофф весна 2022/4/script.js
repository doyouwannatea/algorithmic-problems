// @ts-check
// const { readStdin } = require('../../utils/stdin');

// readStdin((lines) => {
//   const [n, m, k] = lines[0].split(' ').map(Number);
//   const stages = lines[1].split(' ').map(Number);
//   func(n, m, k, stages);
// });

/**
 * @param {number} n –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–ø–æ–≤
 * @param {number} m –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —ç—Ç–∞–ø–æ–≤ –ø–æ–¥—Ä—è–¥
 * @param {number} k –æ–±—ä–µ–º –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞
 * @param {number[]} stages —ç—Ç–∞–ø—ã
 */
function func(n, m, k, stages) {
  // –∑–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–∏ –ø—Ä–æ—Ö–æ–¥–µ —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–µ —É –Ω–∞—Å –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∞–¥–∏—Ç—Å—è –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä
  //    k = 3
  //    2 1 0 2 1 <- –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —ç—Ç–∞–ø–∞
  //    1 1 1 3 3 <- —ç—Ç–∞–ø
  //       üîº —Ç—É—Ç –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Å 0 –ø–æ i
  //    2 1 0 0 0 <- –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —ç—Ç–∞–ø–∞
  //    1 1 1 3 3 <- —ç—Ç–∞–ø
  //           üîº —Ç—É—Ç –¥–ª–∏–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ == 0

  const unitedStages = [];
  let l = 0,
    r = 0,
    accum = k;

  while (r < stages.length) {
    accum -= stages[r];

    if (r - l === m - 1 || accum <= 0) {
      if ((r - l === m - 1 || accum === 0) && r - l > 0) {
        unitedStages.push([l + 1, r - l + 1]);
      } else if (accum < 0 && r - l - 1 > 0) {
        unitedStages.push([l + 1, r - l]);
      }

      l = r + 1;
      accum = k;
    }

    r++;
  }

  const accumProfit = unitedStages.reduce(
    (accum, stage) => (accum += stage[1] - 1),
    0
  );
  console.log(accumProfit);
  console.log(unitedStages.length);
  for (const stage of unitedStages) {
    console.log(`${stage[0]} ${stage[1]}`);
  }
}

// 2 –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Å–æ–∫—Ä–∞—Ç–∏–ª–æ—Å—å –∫–æ–ª-–≤–æ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–æ–≤
// 1 –∫–æ–ª-–≤–æ –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤
// 1 3 –Ω–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø / –∫–æ–ª-–≤–æ —ç—Ç–∞–ø–æ–≤ –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏
func(5, 3, 3, [1, 1, 1, 3, 3]);
console.log('');

// 4
// 2
// 1 3
// 4 3
func(6, 3, 3, [1, 1, 1, 1, 1, 1]);
console.log('');

// 0
// 0
func(5, 5, 2, [2, 4, 6, 8, 10]);
